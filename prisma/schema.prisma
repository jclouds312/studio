// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String?
  avatar        String?
  phone         String?
  location      String?
  role          String
  status        String?
  createdAt     DateTime  @default(now())
  
  profileData   ProfileData?
  applications  Application[]
  savedJobs     Job[]      @relation("SavedJobs")
  company       Company?   @relation(fields: [companyId], references: [id])
  companyId     String?    @unique
  transactions  Transaction[]

  @@map("users")
}

model ProfileData {
  id                  String @id @default(cuid())
  professionalSummary String?
  experience          String?
  userId              String @unique
  user                User   @relation(fields: [userId], references: [id])

  @@map("profile_data")
}

model Application {
  id      String @id @default(cuid())
  jobId   String
  userId  String
  status  String
  
  job     Job   @relation(fields: [jobId], references: [id])
  user    User  @relation(fields: [userId], references: [id])
  
  @@map("applications")
}

model Company {
  id        String   @id @default(cuid())
  name      String   @unique
  cuit      String   @unique
  address   String?
  city      String
  province  String?
  phone     String?
  logoUrl   String?
  status    String?
  
  owner     User?
  jobs      Job[]

  @@map("companies")
}

model Job {
  id            String   @id @default(cuid())
  title         String
  location      String
  type          String
  description   String
  category      String
  isFeatured    Boolean  @default(false)
  isNew         Boolean  @default(false)
  whatsapp      String?
  
  companyId     String
  company       Company  @relation(fields: [companyId], references: [id])
  
  applications  Application[]
  savedBy       User[]        @relation("SavedJobs")

  @@map("jobs")
}

model Transaction {
  id      String   @id @default(cuid())
  plan    String
  status  String
  amount  Float
  date    DateTime @default(now())
  
  userId  String
  user    User     @relation(fields: [userId], references: [id])

  @@map("transactions")
}
