// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  // The following line is not needed for the chosen engine type.
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  emailVerified   DateTime?
  password        String?
  avatar          String?
  role            String    @default("user") // admin, user, company
  status          String?   @default("Pendiente") // Verificado, Pendiente, Suspendido
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  companyProfile  CompanyProfile?
}

model Job {
  id           String   @id @default(cuid())
  title        String
  company      String
  companyLogo  String
  location     String
  type         String
  category     String
  description  String
  whatsapp     String?
  isFeatured   Boolean  @default(false)
  isNew        Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  companyProfile   CompanyProfile? @relation(fields: [companyProfileId], references: [id])
  companyProfileId String?
}

model CompanyProfile {
  id       String  @id @default(cuid())
  name     String  @unique
  cuit     String  @unique
  address  String?
  city     String
  province String?
  phone    String?
  logoUrl  String?
  status   String? @default("Pendiente") // Activa, Inactiva, Pendiente
  userId   String? @unique
  user     User?   @relation(fields: [userId], references: [id])
  jobs     Job[]
}

model SubscriptionPlan {
  id            String          @id @default(cuid())
  name          String
  userType      String // 'worker' or 'company'
  isPopular     Boolean         @default(false)
  description   String
  iconName      String
  pricingOptions PricingOption[]
}

model PricingOption {
  id                 String            @id @default(cuid())
  duration           String // 'monthly', 'quarterly', 'semi-annually'
  price              String
  priceDetail        String
  priceAmount        Float
  discount           String?
  features           String
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String?
}
